using Cysharp.Threading.Tasks;
using Luban;

{{namespace_with_grace_begin __namespace}}
public partial class {{__name}}
{
    {{~for table in __tables ~}}
{{~if table.comment != '' ~}}
    /// <summary>
    /// {{escape_comment table.comment}}
    /// </summary>
{{~end~}}
    public {{table.full_name}} {{format_property_name __code_style table.name}} {get; private set;}
    {{~end~}}
    
    private {{__name}}()
    {
    }

    public {{__name}}(System.Func<string, ByteBuf> loader)
    {
        {{~for table in __tables ~}}
        {{format_property_name __code_style table.name}} = new {{table.full_name}}(loader("{{table.output_data_file}}"));
        {{~end~}}
        ResolveRef();
    }
    
    private void ResolveRef()
    {
        {{~for table in __tables ~}}
        {{format_property_name __code_style table.name}}.ResolveRef(this);
        {{~end~}}
    }
	
	private async UniTask Initialize(System.Func<string, UniTask<ByteBuf>> loader)
	{
        {{~for table in __tables ~}}
        {{format_property_name __code_style table.name}} = new {{table.full_name}}(await loader("{{table.output_data_file}}"));
        {{~end~}}
        ResolveRef();
    }
    
    public static async UniTask<{{__name}}> Create(System.Func<string, UniTask<ByteBuf>> loader)
    {
        var instance = new {{__name}}();
        await instance.Initialize(loader);
        return instance;
    }
}

{{namespace_with_grace_end __namespace}}